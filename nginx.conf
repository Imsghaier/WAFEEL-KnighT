worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout 65;

    # Rate Limiting for Brute Force Attacks
    limit_req_zone $binary_remote_addr zone=mylimit:10m rate=5r/s;

    server {
        listen 80; # Listen on port 80
        server_name localhost; # Use localhost for local access

        # Basic SQL Injection Prevention
        if ($query_string ~* "(drop|union|select|insert|delete|--|;|' OR 1=1|\" OR 1=1)") {
            return 403;
        }

        # Basic XSS Protection
        if ($request_uri ~* "(<script>|</script>|onerror=|onload=|onmouseover=|onfocus=|<iframe>|<img>)") {
            return 403;
        }

        # Directory Traversal Prevention
        if ($uri ~* "\.\./") {
            return 403;
        }

        # Restricting HTTP Methods
        if ($request_method !~* "^(GET|POST|HEAD|OPTIONS)$") {
            return 403;
        }

        # Preventing File Uploads
        if ($request_uri ~* "\.(exe|php|jsp|aspx|cgi)$") {
            return 403;
        }

        # Common Exploit Blocking
        if ($query_string ~* "(\.\./|/etc/passwd|/bin/bash|/system32|select\+from|select%20from|union\)"){
            return 403;
        }

        location / {
            limit_req zone=mylimit burst=5;

            proxy_pass http://waf:8081; # Forward requests to your Python-based firewall
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}

